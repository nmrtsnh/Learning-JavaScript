import   "a2b9b486472d1022aac7bf610e8d3c3c:url:../../img/icons.svg";
class $a2b9b486472d1022aac7bf610e8d3c3c$export$9099ad97b570f7c {
    _data;
    render(data, render = true) {
        if (!data || Array.isArray(data) && data.length === 0) return this.renderError();
        this._data = data;
        const markup = this._generateMarkup();
        if (!render) return markup;
        this._clear();
        this._parentElement.insertAdjacentHTML('afterbegin', markup);
    }
    update(data) {
        this._data = data;
        const newMarkup = this._generateMarkup();
        const newDom = document.createRange().createContextualFragment(newMarkup);
        const newElements = Array.from(newDom.querySelectorAll('*'));
        const curElements = Array.from(this._parentElement.querySelectorAll('*'));
        newElements.forEach((newEl, i)=>{
            const curEl = curElements[i];
            //   console.log(curEl, newEl.isEqualNode(curEl));
            //Updates changed text
            if (!newEl.isEqualNode(curEl) && newEl.firstChild?.nodeValue.trim() !== '') curEl.textContent = newEl.textContent;
            ///update changed attributes
            if (!newEl.isEqualNode(curEl)) Array.from(newEl.attributes).forEach((attr)=>curEl.setAttribute(attr.name, attr.value)
            );
        });
    }
    _clear() {
        this._parentElement.innerHTML = '';
    }
    renderSpinner() {
        const markup = `\n    <div class="spinner">\n            <svg>\n              <use href="${$a2b9b486472d1022aac7bf610e8d3c3c$import$5e363e6f755f0684$9099ad97b570f7c}#icon-loader"></use>\n            </svg>\n          </div> \n    `;
        this._clear();
        this._parentElement.insertAdjacentHTML('afterbegin', markup);
    }
    renderError(message = this._errorMessage) {
        const markup = `\n      <div class="error">\n            <div>\n              <svg>\n                <use href="${$a2b9b486472d1022aac7bf610e8d3c3c$import$5e363e6f755f0684$9099ad97b570f7c}#icon-alert-triangle"></use>\n              </svg>\n            </div>\n            <p>${message}!</p>\n          </div>\n      `;
        this._clear();
        this._parentElement.insertAdjacentHTML('afterbegin', markup);
    }
    renderMessage(message = this._message) {
        const markup = `\n      <div class="error">\n            <div>\n              <svg>\n                <use href="${$a2b9b486472d1022aac7bf610e8d3c3c$import$5e363e6f755f0684$9099ad97b570f7c}#icon-smile"></use>\n              </svg>\n            </div>\n            <p>${message}!</p>\n          </div>\n      `;
        this._clear();
        this._parentElement.insertAdjacentHTML('afterbegin', markup);
    }
}
